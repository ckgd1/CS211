//Test client to test DLL class
//5-7-2016
//CS211  Kazumi Slott
#include <iostream>
using namespace std;
#include "DLL.h"
int main()
{
  DLL l;
  cout << "TEST addRead, delteFront, displayAll, printAllReverseDLL 
**********************************************" << endl;
  cout << "------------ A -------------" << endl;
  if(l.isEmpty())
    cout << "The list is empty" << endl;  // "The list is empty"
  l.displayAll(); // [empty]
  cout << endl;
  
  l.printAllReverseDLL(); // [empty]
  cout << endl;
  
  cout << "------------ B -------------" << endl;
  l.addRear(1);
  l.displayAll(); // 1
  cout << endl;
  
  l.printAllReverseDLL(); // 1
  cout << endl;
  
  cout << "------------ C -------------" << endl;
  
  l.addRear(2);
  l.addRear(3);
  l.addRear(4);
  l.displayAll(); // [1] -> [2] -> [3] -> [4]
  cout << endl;
  
  l.printAllReverseDLL(); // [4] -> [3] -> [2] -> [1]
  cout << endl;
  
  cout << "------------ D -------------" << endl;
  
  cout << l.deleteFront() << " has been removed" << endl;  //1 has been removed
  cout << l.deleteFront() << " has been removed" << endl;  //2 has been removed
  cout << l.deleteFront() << " has been removed" << endl;  //3 has been removed
  
  l.displayAll(); // [4]
  cout << endl;
   
  l.printAllReverseDLL(); // [4] 
  cout << endl;
   
  cout << "------------ E -------------" << endl;
  
  if(!l.isEmpty())
    cout << "The list is NOT empty" << endl;  // "The list is NOT empty"

  cout << l.deleteFront() << " has been removed" << endl;  //4 has been removed
  
if(l.isEmpty())
  cout << "The list is empty" << endl;  // "The list is empty"
  
 l.displayAll(); // [empty]
 cout << endl;
 
 l.printAllReverseDLL(); // [empty] 
 cout << endl;
   
 cout << "TEST addFront, deleteRear **************************************************************" << endl;
 cout << "------------ A -------------" << endl;
 l.addFront(1); 
 l.addFront(2);
    
 l.addFront(3);
 
 l.addFront(4);
 
 l.addFront(5);
 
 l.displayAll();  // 5 4 3 2 1

 cout << endl;
   
 l.printAllReverseDLL(); // 1 2 3 4 5
 cout << endl;
   
 cout << "------------ B -------------" << endl;

 cout << l.deleteRear() << " has been removed" << endl; //1 has been removed 
 cout << l.deleteRear() << " has been removed" << endl; //2 has been removed

 l.displayAll(); //5 4 3
 cout << endl;
   
 l.printAllReverseDLL(); // 3 4 5
 cout << endl;
   
 cout << "------------ C -------------" << endl;
 cout << endl << endl;
    
 cout << l.deleteRear() << " has been removed" << endl; //3 has been removed
 cout << l.deleteRear() << " has been removed" << endl; //4 has been removed 
 l.displayAll(); //5
 cout << endl;
   
 l.printAllReverseDLL(); // 5
 cout << endl;
   
 cout << "------------ D -------------" << endl;
 
 cout << l.deleteRear() << " has been removed" << endl; // 5 has been removed
 l.displayAll(); //[empty]
 cout << endl;
   
 l.printAllReverseDLL(); // [empty]
 cout << endl;
   
 cout << "TEST Search **************************************************************" << endl;
 DLL l2;
 l2.addRear(3);
 l2.addRear(9);
 l2.addRear(2);
